{
	"name": "vscode-js-import",
	"displayName": "vscode-js-import",
	"description": "Intelligent and fast import extension for js in vscode, support import position option and adding import to existing import statement.",
	"version": "0.15.4",
	"publisher": "wangtao0101",
	"repository": {
		"type": "git",
		"url": "https://github.com/wangtao0101/vscode-js-import.git"
	},
	"keywords": [
		"multi-root ready"
	],
	"engines": {
		"vscode": "^1.17.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"*",
		"onCommand:extension.shortcutImport"
	],
	"main": "./out/src/extension",
	"contributes": {
		"commands": [
			{
				"command": "extension.shortcutImport",
				"title": "Shortcut Import"
			}
		],
		"keybindings": [
			{
				"command": "extension.shortcutImport",
				"key": "ctrl+alt+h",
				"mac": "cmd+alt+h",
				"when": "editorFocus"
			}
		],
		"configuration": {
			"type": "object",
			"title": "js import configuration",
			"properties": {
				"js-import.root": {
					"type": "string",
					"default": "/src",
					"description": "the source dir, currently we only support single root",
					"scope": "resource"
				},
				"js-import.alias": {
					"type": "object",
					"description": "module alias like webpack resolve.alias 或者 typescript compilerOptions.paths, not support nested alias path, e.g { util: 'src/util/' }",
					"default": "",
					"scope": "resource"
				},
				"js-import.filesToScan": {
					"type": "string",
					"default": "**/*.{jsx,js,tsx,ts}",
					"description": "Glob for files to watch and scan, e.g ./src/** ./src/app/**/*.js. Defaults to **/*.{jsx,js,ts}",
					"scope": "resource"
				},
				"js-import.excludeFilesToScan": {
					"type": "string",
					"default": "",
					"description": "Glob for files to exclude from watch and scan, e.g **/.meteor/**. Defaults to nothing",
					"scope": "resource"
				},
				"js-import.plainFileSuffix": {
					"type": "string",
					"default": "css,less,sass",
					"description": "suffix of plainFiles, import statement is like 'import 'xxx.less';'. Defaults to css,less,sass",
					"scope": "resource"
				},
				"js-import.plainFileSuffixWithDefaultMember": {
					"type": "string",
					"default": "json,bmp,gif,jpe,jpeg,png",
					"description": "suffix of plainFiles which should be imported with default member, import statement is like 'import json form 'xxx.json';'. Defaults to json,bmp,gif,jpe,jpeg,png",
					"scope": "resource"
				},
				"js-import.insertPosition": {
					"type": "string",
					"default": "last",
					"description": "the insert position of new import statement, first means first of all imports, last means last of all imports, soon we will suport sort",
					"scope": "resource"
				},
				"js-import.commaDangleImport": {
					"type": "string",
					"default": "never",
					"description": "option for comma-dangle to generate import statement, like esline rule imports of comma-dangle, there are four options :　never, always, always-multiline, only-multiline",
					"scope": "resource"
				},
				"js-import.codeCompletion": {
					"type": "boolean",
					"default": "true",
					"description": "whether to enable codeCompletion",
					"scope": "resource"
				},
				"js-import.codeCompletionAction": {
					"type": "boolean",
					"default": "true",
					"description": "whether to autofix import when you select completion item, you can set it false to avoid mistaken import, then we will only provide code completion and you can use shutcut or autofix to import identifier",
					"scope": "resource"
				},
				"js-import.quote": {
					"type": "string",
					"default": "singlequote",
					"description": "whether to use singlequote or use doublequote",
					"scope": "resource"
				},
				"js-import.semicolon": {
					"type": "boolean",
					"default": "true",
					"description": "whether to add semicolon after import statement",
					"scope": "resource"
				},
				"js-import.maxLen": {
					"type": "number",
					"default": "100",
					"description": "max-line length like eslint rule max-line, the -1 will disable the rule",
					"scope": "resource"
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "tsc -p ./",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"test": "cross-env CODE_TESTS_WORKSPACE=test/testRoot node ./node_modules/vscode/bin/test"
	},
	"devDependencies": {
		"@types/mocha": "^2.2.32",
		"@types/node": "^6.0.40",
		"cross-env": "^5.0.0",
		"mocha": "^2.3.3",
		"typescript": "^2.0.3",
		"vscode": "1.1.7"
	},
	"dependencies": {
		"babylon": "^6.17.2",
		"leven": "^2.1.0",
		"open": "^0.0.5",
		"parse-comment-es6": "^0.5.5",
		"parse-import-es6": "^0.5.9",
		"require-relative": "^0.8.7",
		"throttleit": "^1.0.0"
	},
	"__metadata": {
		"id": "e7dd595d-816e-4c06-87f4-37235d50ab6f",
		"publisherId": "54405f5c-7c88-4a0e-b95d-133875e3e755",
		"publisherDisplayName": "wangtao0101"
	}
}